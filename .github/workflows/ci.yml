name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: dataeng
          POSTGRES_PASSWORD: dataeng123
          POSTGRES_DB: ecommerce_dw
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run linting
      run: |
        pip install flake8
        flake8 src/ --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 src/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Setup database schema
      env:
        DB_HOST: localhost
        DB_PORT: 5432
        DB_NAME: ecommerce_dw
        DB_USER: dataeng
        DB_PASSWORD: dataeng123
      run: |
        PGPASSWORD=dataeng123 psql -h localhost -U dataeng -d ecommerce_dw -f sql/ddl/01_create_schemas.sql
        PGPASSWORD=dataeng123 psql -h localhost -U dataeng -d ecommerce_dw -f sql/ddl/02_create_staging_tables.sql
        PGPASSWORD=dataeng123 psql -h localhost -U dataeng -d ecommerce_dw -f sql/ddl/03_create_marts_tables.sql

    - name: Generate sample data
      run: |
        python -m src.utils.generate_sample_data

    - name: Run unit tests
      run: |
        pytest tests/unit/ -v --tb=short

    - name: Run integration tests
      env:
        DB_HOST: localhost
        DB_PORT: 5432
        DB_NAME: ecommerce_dw
        DB_USER: dataeng
        DB_PASSWORD: dataeng123
      run: |
        pytest tests/integration/ -v --tb=short

    - name: Test coverage
      env:
        DB_HOST: localhost
        DB_PORT: 5432
        DB_NAME: ecommerce_dw
        DB_USER: dataeng
        DB_PASSWORD: dataeng123
      run: |
        pytest --cov=src --cov-report=xml --cov-report=term tests/

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella

  code-quality:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        pip install black isort flake8

    - name: Check code formatting with Black
      run: |
        black --check src/ tests/

    - name: Check import sorting with isort
      run: |
        isort --check-only src/ tests/

    - name: Lint with flake8
      run: |
        flake8 src/ tests/ --max-line-length=127 --extend-ignore=E203,W503
